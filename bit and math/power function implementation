// Iterative C program to implement pow(x, n) 
#include <stdio.h> 

/* Iterative Function to calculate (x^y) in O(logy) */
int power(int x, unsigned int y) 
{ 
	int res = 1; // Initialize result 

	while (y > 0) { 
		// If y is odd, multiply x with result 
		if (y & 1) 
			res = res * x; 

		// n must be even now 
		y = y >> 1; // y = y/2 
		x = x * x; // Change x to x^2 
	} 
	return res; 
} 

// Driver program to test above functions 
int main() 
{ 
	int x = 3; 
	unsigned int y = 5; 

	printf("Power is %d", power(x, y)); 

	return 0; 
}
////***************************************************************************************************************************************************////////////////////////
/* Extended version of power function 
that can work for float x and negative y*/
#include <bits/stdc++.h> 
using namespace std; 

float power(float x, int y) 
{ 
	float temp; 
	if(y == 0) 
		return 1; 
	temp = power(x, y / 2); 
	if (y % 2 == 0) 
		return temp * temp; 
	else
	{ 
		if(y > 0) 
			return x * temp * temp; 
		else
			return (temp * temp) / x; 
	} 
} 

// Driver Code 
int main() 
{ 
	float x = 2; 
	int y = -3; 
	cout << power(x, y); 
	return 0; 
} 

// This is code is contributed 
// by rathbhupendra 
