*********************************************************************************************************************************************************************************
https://practice.geeksforgeeks.org/problems/the-celebrity-problem/1

video -link : https://www.youtube.com/watch?v=LtGnA5L6LIk&list=PLqM7alHXFySF7Lap-wi5qlaD8OEBx9RMV&index=18
*********************************************************************************************************************************************************************************

*********************************************************************************************************************************************************************************
Create a stack and push all the id's in the stack.
Run a loop while there are more than 1 element in the stack.
Pop top two element from the stack (represent them as A and B)
Check if A knows B, then A can't be a celebrity and push B in stack. Check if A doesn't know B, then B can't be a celebrity push A in stack
Assign the remaining element in the stack as the celebrity
Run a loop from 0 to n-1 and find the count of persons who knows the celebrity and the number of people whom the celebrity knows. if the count of persons who knows the celebrity is n-1 and the count of people whom the celebrity knows is 0 then return the id of celebrity else return -1.
********************************************************************************************************************************************************************************

*********************************************************************************************************************************************************************************
int getId(int M[MAX][MAX], int n)
{
    //Your code here
    stack<int>s;
    for(int i=0;i<n;i++){
        s.push(i);
    }
    while(s.size()>1){
        int x=s.top();
        s.pop();
        int y=s.top();
        s.pop();
        if(M[x][y]){
            s.push(y);
        }
        else{
            s.push(x);
        }
    }
    int cel = s.top();
    s.pop();
    int c=0;
    int c1=0;
    for(int i=0;i<n;i++){
        if(i!=cel){
            if(M[cel][i]){
                c++;
            }
            else if(M[i][cel]){
                c1++;
            }
        }
    }
    if((c1==(n-1))&&(c==0))
        return cel;
    else
        return -1;
***********************************************************************************************************************************************************************************
