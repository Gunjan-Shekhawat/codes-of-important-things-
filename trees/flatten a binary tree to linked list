https://www.youtube.com/watch?v=598gdjE6Quo


https://leetcode.com/problems/flatten-binary-tree-to-linked-list/submissions/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(righ}}}}}}}}}}}}}}}}}}}}}
 }
 */
class Solution {
public:
    void flatten(TreeNode* root) {
        if(root ==NULL){
            return ;
        }
        if(!root->left && ! root->right){
            return ;
        }
        if(root->left){
            flatten(root->left);
            TreeNode *temp  = root->right;
            root->right = root->left;
            root->left = NULL;
            TreeNode *curr = root->right;
            while(curr->right !=NULL){
                curr = curr->right;
            }
            curr->right = temp;
        }
        if(root->right)
          flatten(root->right);

    }
};
