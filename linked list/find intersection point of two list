Node Count Difference Solution : Problem can be solved following these steps -
Get count of the nodes in the first list, let count be c1.
Get a count of the nodes in the second list, let count be c2.
Get the difference of counts d = abs(c1 â€“ c2).
Now traverse the bigger list from the first node till d nodes so that from here onwards both the lists have equal no of nodes.
Then we can traverse both the lists in parallel till we come across a common node. (Note that getting a common node is done by comparing the address of the nodes)
Pseudo Code
/* function to get the intersection point of two linked 
   lists head1 and head2 */
int getIntesectionNode( Node* head1, Node* head2) 
{
    c1 = getCount(head1)
    c2 = getCount(head2)
    d // difference 

    if(c1 > c2) 
        d = c1 - c2
        return utility(d, head1, head2)
    else :
        d = c2 - c1
        return utility(d, head2, head1)
}
/* function to get the intersection point of two linked 
   lists head1 and head2 where head1 has d more nodes than 
   head2 */
int utility(d, Node* head1, Node* head2) 
{
    Node* current1 = head1
    Node* current2 = head2
  
    for ( i = 0 to d-1 )
    {
        if(current1 == NULL) 
            return -1
        current1 = current1->next
    }

    while(current1 !=  NULL && current2 != NULL) 
    {
        if(current1 == current2) 
            return current1->data
        current1= current1->next
        current2= current2->next
    }
    return -1
}
