#include<bits/stdc++.h>
using namespace std;
bool dfs(vector<int> a[],int x,int y,int &m,int &n,vector<bool>visited[],stack<pair<int,int> >&s){
	if(x<0 || x>=m || y<0 || y>=n){
		return false;
	}
	if((a[x][y]==0) ||(visited[x][y])) {
		return false ;
	}
	if(x==m-1 && y==n-1){
		return true;
	}
	
		s.push({x,y});
	visited[x][y]=true;
	//cout<<x<<" "<<y<<endl;
	if(dfs(a,x+1,y,m,n,visited,s)){
		return true;
	}
	if(dfs(a,x-1,y,m,n,visited,s)){
		return true;
	}
	if(dfs(a,x,y-1,m,n,visited,s)){
		return true;
	}
	if(dfs(a,x,y+1,m,n,visited,s)){
		return true;
	}
	if(!(dfs(a,x+1,y,m,n,visited,s)||dfs(a,x-1,y,m,n,visited,s)||dfs(a,x,y-1,m,n,visited,s)||dfs(a,x,y+1,m,n,visited,s))){
		s.pop();
		return false;
	}
}
int main(){
	int x,y;
	cin>>x>>y;
	vector<int>a[x];
	int d;
	stack<pair<int,int> >s;
	for(int i=0;i<x;i++){
		for(int j=0;j<y;j++){
			cin>>d;
			a[i].push_back(d);
		}
	}
	vector<bool>visited[x];
	for(int i=0;i<x;i++){
		for(int j=0;j<y;j++){
			visited[i].push_back(0);
		}
	}
	if(dfs(a,0,0,x,y,visited,s)){
	    while(!s.empty()){
	        pair<int,int> x = s.top();
	        cout<<x.first<<" "<<x.second<<endl;
	        s.pop();
	    }
		cout<<"Yes\n";
	}
	else{
		cout<<"No\n";
	}
	
}

// Write your code here
